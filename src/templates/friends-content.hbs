<div class="js-enter"></div>
<article class="friends visually-hidden js-friends">
    <h1 class="visually-hidden">Другофильтр</h1>
    <header class="friends__header">
        <div class="friends__header-cont container">
            <h2 class="friends__subtitle">Выберите друзей</h2>
            <button class="btn btn--close js-close" aria-label="закрыть"></button>
        </div>
    </header>
    <div class="friends__loader">
        <div></div>
        <div></div>
        <div></div>
        <div></div>
    </div>
    <section class="friends__filter filter js-section">
        <div class="filter__cont container">
            <div class="filter__total">
                <input class="filter__search js-search" type="search" placeholder="Начните вводить имя друга"
                       data-type="total">
            </div>
            <div class="filter__select">
                <input class="filter__search js-search" type="search" placeholder="Название" data-type="select">
            </div>
        </div>
    </section>
    <section class="friends__content js-section">
        <div class="friends__content-cont container">
            <div class="friends__wrap">
                <h3 class="friends__caption">Ваши друзья</h3>
                <ul class="friends__list friends__total js-total">
                    ...Пока у Вас нет друзей
                </ul>
            </div>
            <div class="friends__wrap">
                <h3 class="friends__caption">Друзья в списке</h3>
                <ul class="friends__list friends__select js-select"></ul>
            </div>
        </div>
    </section>
    <section class="friends__save js-section">
        <div class="container">
            <button class="friends__save-btn">Сохранить</button>
        </div>
    </section>
</article>

<script>
    // class Storage {
    //     constructor() {
    //         this.selectStorage = [];
    //     }
    //
    //     getStorage = (type) => {
    //         try {
    //             return JSON.parse(localStorage[type]);
    //         } catch (e) {
    //             return null;
    //         }
    //     };
    //
    //     saveStorage = (type, value) => {
    //         localStorage[type] = JSON.stringify(value);
    //     };
    //
    // }
    //
    // class Friends extends Storage {
    //     constructor(main) {
    //         super();
    //         this.main = main;
    //         this.searchFilter = this.main.querySelectorAll('.js-search');
    //         this.select = this.main.querySelector('.js-select');
    //         this.total = this.main.querySelector('.js-total');
    //         this.sections = this.main.querySelectorAll('.js-section');
    //         this.closeBtn = this.main.querySelector('.js-close');
    //         this.box = {
    //             'total': this.select,
    //             'select': this.total
    //         };
    //         this.currentType = {
    //             total: [],
    //             select: []
    //         };
    //         this.currentTypeBox = {
    //             'total': this.total,
    //             'select': this.select
    //         };
    //         this.classNameBtn = {
    //             add: 'btn--total',
    //             remove: 'btn--select'
    //         };
    //         this.type = {
    //             'total': 'select',
    //             'select': 'total'
    //         };
    //     }
    //
    //     changeClassButton(elem) {
    //         if (elem.classList.contains(this.classNameBtn.add)) {
    //             elem.classList.remove(this.classNameBtn.add);
    //             elem.classList.add(this.classNameBtn.remove);
    //         } else {
    //             elem.classList.add(this.classNameBtn.add);
    //             elem.classList.remove(this.classNameBtn.remove);
    //         }
    //     }
    //
    //     handleBarsRender(box, elements, isStartRender = false) {
    //         let items = elements;
    //
    //         if (isStartRender) {
    //             const storageSelects = this.getStorage('select');
    //
    //             if (storageSelects && storageSelects.length) {
    //                 // переопределние items
    //                 items = elements.filter(el => storageSelects.includes(`${el.id}`));
    //                 items.forEach(el => el.type = 'select');
    //                 select.innerHTML = render({items});
    //                 // переопределние items
    //                 items = elements.filter(el => !storageSelects.includes(`${el.id}`));
    //             }
    //         }
    //         box.innerHTML = render({items});
    //     }
    //
    //     pushCurrentType(elem, type) {
    //         this.currentType[type].push({
    //             id: elem.dataset.id,
    //             first_name: elem.dataset.name,
    //             last_name: elem.dataset.lastname,
    //             photo_50: elem.dataset.img,
    //             type: elem.dataset.type
    //         });
    //     }
    //
    //     changeSearchFilter() {
    //         const selectChild = document.querySelectorAll('.js-select li');
    //         const totalChild = document.querySelectorAll('.js-total li');
    //
    //         [...selectChild].forEach(el => this.pushCurrentType(el, 'select'));
    //         [...totalChild].forEach(el => this.pushCurrentType(el, 'total'));
    //         this.searchFilter.forEach(el => {
    //             el.addEventListener('keyup', e => this.renderSearchFilter(e.target));
    //             el.addEventListener('input', e => this.renderSearchFilter(e.target));
    //         });
    //     }
    //
    //     isEntryValue = (box, val) => box.toLowerCase().indexOf(val.toLowerCase()) !== -1;
    //
    //     renderSearchFilter(target) {
    //         let items = this.currentType[target.dataset.type];
    //
    //         items = items.filter(el => this.isEntryValue(`${el.first_name} ${el.last_name}`, target.value));
    //         this.handleBarsRender(this.currentTypeBox[target.dataset.type], items);
    //     }
    // }
    //
    // class MoveElement extends Friends {
    //     constructor() {
    //         super();
    //         this.currentTarget = {};
    //     }
    //
    //     moveElement(element, button) {
    //         this.currentType[element.dataset.type] = this.currentType[element.dataset.type].filter(el => el.id !== element.dataset.id);
    //         this.box[element.dataset.type].appendChild(element);
    //         element.dataset.type = this.type[element.dataset.type];
    //         this.changeClassButton(button);
    //         this.pushCurrentType(element, element.dataset.type);
    //         this.searchFilter.forEach(this.renderSearchFilter);
    //     }
    //
    //     createZone = (from, className = 'friends__list') => {
    //         do {
    //             if (from.classList.contains(className)) {
    //                 return from;
    //             }
    //         } while (from = from.parentElement);
    //     };
    //
    //     handleClickDrag = e => e.target.classList.contains('js-move') && this.moveElement(e.target.parentElement, e.target);
    //
    //     getDrag() {
    //         document.addEventListener('click', this.handleClickDrag); // перемещение по нажатию
    //         document.addEventListener('dragstart', e => {
    //             const element = this.createZone(e.target, 'js-drag');
    //
    //             if (!element) {
    //                 return;
    //             }
    //             this.currentTarget = {
    //                 source: element.parentElement,
    //                 target: element,
    //                 button: element.querySelector('.js-move')
    //             };
    //             e.dataTransfer.setData('text/html', 'dragstart');
    //         });
    //         document.addEventListener('dragover', e => e.target.parentElement && e.preventDefault());
    //         document.addEventListener('drop', e => {
    //             e.preventDefault();
    //             const zone = this.createZone(e.target);
    //
    //             zone && (zone !== this.currentTarget.source) && this.moveElement(this.currentTarget.target, this.currentTarget.button);
    //         });
    //         //document.querySelector('.friends__save-btn').addEventListener('click', handleClickSaveStorage);
    //     }
    //
    // }
    //
    // class FilterFriends extends MoveElement {
    //     constructor(enter) {
    //         super();
    //         this.enter = enter;
    //     }
    //
    //     handleClickSaveStorage(e) {
    //         e.preventDefault();
    //         this.currentType.select.forEach(el => this.selectStorage.push(el.id));
    //         this.saveStorage('select', this.selectStorage);
    //     }
    //
    //     start() {
    //         this.enter.addEventListener('click', this.handleClickEnter); // вход
    //         this.closeBtn.addEventListener('click', this.handleClickLogOut); // выход
    //         document.querySelector('.friends__save-btn').addEventListener('click', this.handleClickSaveStorage);
    //
    //     }
    //
    //     async handleClickEnter() {
    //         try {
    //             await this.auth();
    //             this.sections.forEach(el => el.classList.add(hiddenClass));
    //             const list = await this.getFriends('friends.get', {fields: 'photo_50', count: 5});
    //             const items = list.items.filter(el => el.type = 'total');
    //
    //             this.handleBarsRender(this.total, items, true);
    //             this.changeSearchFilter();
    //             this.sections.forEach(el => el.classList.remove(hiddenClass));
    //             this.main.querySelector('.friends__loader').classList.add(hiddenClass);
    //         } catch (e) {
    //             return null;
    //         }
    //     }
    //
    //     auth() {
    //         return new Promise((resolve, reject) => {
    //             VK.Auth.login(data => {
    //                 if (data.session) {
    //                     resolve();
    //                     this.main.classList.remove(hiddenClass);
    //                     this.enter.classList.add(hiddenClass);
    //                 }
    //                 reject(new Error('Не удалось авторизоваться'));
    //             }, 2);
    //         });
    //     } // нормик
    //     getFriends(method, params) {
    //         params.v = '5.76';
    //
    //         return new Promise((resolve, reject) => {
    //             VK.api(method, params, data => data.error ? reject(data.error) : resolve(data.response));
    //         });
    //     } // нормик
    //     handleClickLogOut() {
    //         VK.Auth.logout(data => {
    //             if (!data.session) {
    //                 this.main.classList.add(hiddenClass);
    //                 this.main.classList.remove(hiddenClass);
    //             }
    //         });
    //     } // нормик
    // }

    //
    //
    //
    // import './style/index.css';
    // import render from './templates/friends.hbs';
    // import api from './api.js';
    //
    // const enter = document.querySelector('.js-enter');
    // const friends = document.querySelector('.js-friends');
    // const searchFilter = friends.querySelectorAll('.js-search');
    // const select = friends.querySelector('.js-select');
    // const total = friends.querySelector('.js-total');
    // const sections = friends.querySelectorAll('.js-section');
    // const closeBtn = friends.querySelector('.js-close');
    // const hiddenClass = 'visually-hidden';
    // const classNameBtn = {
    //     add: 'btn--total',
    //     remove: 'btn--select'
    // };
    // const type = {
    //     'total': 'select',
    //     'select': 'total'
    // };
    // const box = {
    //     'total': select,
    //     'select': total
    // };
    // const currentTypeBox = {
    //     'total': total,
    //     'select': select
    // };
    // const selectStorage = [];
    // let currentType = {
    //     total: [],
    //     select: []
    // };
    // let currentTarget;
    //
    // const isEntryValue = (box, val) => box.toLowerCase().indexOf(val.toLowerCase()) !== -1;
    //
    // const saveStorage = (type, value) => localStorage[type] = JSON.stringify(value);
    //
    // function getStorage(type) {
    //     try {
    //         return JSON.parse(localStorage[type]);
    //     } catch (e) {
    //         return null;
    //     }
    // }
    //
    // function handleClickDrag(e) {
    //     return e.target.classList.contains('js-move') && moveElement(e.target.parentElement, e.target);
    // }
    //
    // function handleBarsRender(box, elements, isStartRender = false) {
    //     let items = elements;
    //
    //     if (isStartRender) {
    //         const storageSelects = getStorage('select');
    //
    //         if (storageSelects && storageSelects.length) {
    //             // переопределние items
    //             items = elements.filter(el => storageSelects.includes(`${el.id}`));
    //             items.forEach(el => el.type = 'select');
    //             select.innerHTML = render({ items });
    //             // переопределние items
    //             items = elements.filter(el => !storageSelects.includes(`${el.id}`));
    //         }
    //     }
    //     box.innerHTML = render({ items });
    // }
    //
    // function renderSearchFilter(target) {
    //     let items = currentType[target.dataset.type];
    //
    //     items = items.filter(el => isEntryValue(`${el.first_name} ${el.last_name}`, target.value));
    //     handleBarsRender(currentTypeBox[target.dataset.type], items);
    // }
    //
    // function changeClassButton(elem) {
    //     if (elem.classList.contains(classNameBtn.add)) {
    //         elem.classList.remove(classNameBtn.add);
    //         elem.classList.add(classNameBtn.remove);
    //     } else {
    //         elem.classList.add(classNameBtn.add);
    //         elem.classList.remove(classNameBtn.remove);
    //     }
    // }
    //
    // function changeSearchFilter() {
    //     const selectChild = document.querySelectorAll('.js-select li');
    //     const totalChild = document.querySelectorAll('.js-total li');
    //
    //     [...selectChild].forEach(el => pushCurrentType(el, 'select'));
    //     [...totalChild].forEach(el => pushCurrentType(el, 'total'));
    //     searchFilter.forEach(el => {
    //         el.addEventListener('keyup', e => renderSearchFilter(e.target));
    //         el.addEventListener('input', e => renderSearchFilter(e.target));
    //     });
    // }
    //
    // function pushCurrentType(elem, type) {
    //     currentType[type].push({
    //         id: elem.dataset.id,
    //         first_name: elem.dataset.name,
    //         last_name: elem.dataset.lastname,
    //         photo_50: elem.dataset.img,
    //         type: elem.dataset.type
    //     });
    // }
    //
    // function moveElement(element, button) {
    //     currentType[element.dataset.type] = currentType[element.dataset.type].filter(el => el.id !== element.dataset.id);
    //     box[element.dataset.type].appendChild(element);
    //     element.dataset.type = type[element.dataset.type];
    //     changeClassButton(button);
    //     pushCurrentType(element, element.dataset.type);
    //     searchFilter.forEach(renderSearchFilter);
    // }
    //
    // function createZone(from, className = 'friends__list') {
    //     do {
    //         if (from.classList.contains(className)) {
    //             return from;
    //         }
    //     } while (from = from.parentElement);
    // }

    //api.auth();
    // function auth() {
    //     return new Promise((resolve, reject) => {
    //         VK.Auth.login(data => {
    //             if (data.session) {
    //                 resolve();
    //                 friends.classList.remove(hiddenClass);
    //                 enter.classList.add(hiddenClass);
    //             }
    //             reject(new Error('Не удалось авторизоваться'));
    //         }, 2);
    //     });
    // }

    // function getFriends(method, params) {
    //     params.v = '5.76';
    //
    //     return new Promise((resolve, reject) => {
    //         VK.api(method, params, data => data.error ? reject(data.error) : resolve(data.response));
    //     });
    // }

    // async function handleClickEnter() {
    //     try {
    //         await api.auth();
    //         sections.forEach(el => el.classList.add(hiddenClass));
    //         const list = await api.getFriends('friends.get', { fields: 'photo_50', count: 5 });
    //         const items = list.items.filter(el => el.type = 'total');
    //
    //         handleBarsRender(total, items, true);
    //         changeSearchFilter();
    //         sections.forEach(el => el.classList.remove(hiddenClass));
    //         friends.querySelector('.friends__loader').classList.add(hiddenClass);
    //     } catch (e) {
    //         return null;
    //     }
    // }
    //
    // // function handleClickLogOut() {
    // //     VK.Auth.logout(data => {
    // //         if (!data.session) {
    // //             friends.classList.add(hiddenClass);
    // //             enter.classList.remove(hiddenClass);
    // //         }
    // //     });
    // // }
    //
    // function handleClickSaveStorage(e) {
    //     e.preventDefault();
    //     currentType.select.forEach(el => selectStorage.push(el.id));
    //     saveStorage('select', selectStorage);
    // }
    //
    // // // инициализация api vk
    // VK.init({
    //     apiId: 6761649
    // });
    // enter.addEventListener('click', handleClickEnter); // вход
    // document.addEventListener('click', handleClickDrag); // перемещение по нажатию
    // document.addEventListener('dragstart', e => {
    //     const element = createZone(e.target, 'js-drag');
    //
    //     if (!element) {
    //         return;
    //     }
    //     currentTarget = {
    //         source: element.parentElement,
    //         target: element,
    //         button: element.querySelector('.js-move')
    //     };
    //     e.dataTransfer.setData('text/html', 'dragstart');
    // });
    // document.addEventListener('dragover', e => e.target.parentElement && e.preventDefault());
    // document.addEventListener('drop', e => {
    //     e.preventDefault();
    //     const zone = createZone(e.target);
    //
    //     zone && (zone !== currentTarget.source) && moveElement(currentTarget.target, currentTarget.button);
    // });
    // document.querySelector('.friends__save-btn').addEventListener('click', handleClickSaveStorage);
    // closeBtn.addEventListener('click', api.logOut); // выход
    // //VK.UI.button(enter); // кнопка api vk
</script>